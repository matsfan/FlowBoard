// <auto-generated />
using System;
using FlowBoard.Infrastructure.Persistence.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlowBoard.Infrastructure.Persistence.Ef.Migrations
{
    [DbContext(typeof(FlowBoardDbContext))]
    partial class FlowBoardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("FlowBoard.Domain.Aggregates.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("FlowBoard.Domain.Aggregates.Board", b =>
                {
                    b.OwnsMany("FlowBoard.Domain.Entities.Column", "Columns", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("BoardId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Order")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("WipLimit")
                                .HasColumnType("INTEGER")
                                .HasColumnName("WipLimit");

                            b1.HasKey("Id");

                            b1.HasIndex("BoardId");

                            b1.ToTable("Columns", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BoardId");

                            b1.OwnsMany("FlowBoard.Domain.Entities.Card", "Cards", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("ColumnId")
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTimeOffset>("CreatedUtc")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("IsArchived")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Order")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ColumnId");

                                    b2.ToTable("Cards", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ColumnId");

                                    b2.OwnsOne("FlowBoard.Domain.ValueObjects.CardDescription", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("CardId")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(5000)
                                                .HasColumnType("TEXT")
                                                .HasColumnName("Description");

                                            b3.HasKey("CardId");

                                            b3.ToTable("Cards");

                                            b3.WithOwner()
                                                .HasForeignKey("CardId");
                                        });

                                    b2.OwnsOne("FlowBoard.Domain.ValueObjects.CardTitle", "Title", b3 =>
                                        {
                                            b3.Property<Guid>("CardId")
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(200)
                                                .HasColumnType("TEXT")
                                                .HasColumnName("Title");

                                            b3.HasKey("CardId");

                                            b3.ToTable("Cards");

                                            b3.WithOwner()
                                                .HasForeignKey("CardId");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Title")
                                        .IsRequired();
                                });

                            b1.OwnsOne("FlowBoard.Domain.ValueObjects.ColumnName", "Name", b2 =>
                                {
                                    b2.Property<Guid>("ColumnId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(60)
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Name");

                                    b2.HasKey("ColumnId");

                                    b2.ToTable("Columns");

                                    b2.WithOwner()
                                        .HasForeignKey("ColumnId");
                                });

                            b1.Navigation("Cards");

                            b1.Navigation("Name")
                                .IsRequired();
                        });

                    b.OwnsOne("FlowBoard.Domain.ValueObjects.BoardName", "Name", b1 =>
                        {
                            b1.Property<Guid>("BoardId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("Name");

                            b1.HasKey("BoardId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Boards");

                            b1.WithOwner()
                                .HasForeignKey("BoardId");
                        });

                    b.Navigation("Columns");

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
